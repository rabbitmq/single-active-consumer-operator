name: operatorhub

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  release:
    types: [published]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

  
      # Initialize environment and install Carvel toolsuite
      - uses: actions/checkout@v2
      - name: Initialize
        run: |
          RELEASE_VERSION=${GITHUB_REF#refs/*/} 
          echo "RELEASE_VERSION=${RELEASE_VERSION:1}" >> $GITHUB_ENV
          git config --global user.name "DanielePalaia"
          git config --global user.email "dpalaia@vmware.com"
          wget -O- https://carvel.dev/install.sh > install.sh
          sudo bash install.sh
      # Generate the OLM Bundle for plain K8s and Openshift
      - name: GenerateOLMBundle
        run: |
          git clone https://github.com/rabbitmq/OLM-Package-Repo
          wget https://github.com/rabbitmq/single-active-consumer-operator/releases/latest/download/single-active-consumer-operator-with-certmanager.yaml
          cp ./single-active-consumer-operator-with-certmanager.yaml ./OLM-Package-Repo/generate_OLM/generate_OLM_single_active_consumer_operator/manifests_crds/
          cp ./config/crd/bases/*.yaml ./OLM-Package-Repo/generate_OLM/generate_OLM_single_active_consumer_operator/manifests_crds/crds
          cd ./OLM-Package-Repo/generate_OLM/generate_OLM_single_active_consumer_operator/
          python3 generate-olm-package.py ./manifests_crds/single-active-consumer-operator-with-certmanager.yaml ${{ env.RELEASE_VERSION }} ./../../OLM2/rabbitmq-single-active-consumer-operator
          cp ./generators/cluster-service-version-generator-openshift.yml ./generators/cluster-service-version-generator.yml
          cp ./generators/annotations-openshift.yaml ./generators/annotations.yaml
          python3 generate-olm-package.py ./manifests_crds/single-active-consumer-operator-with-certmanager.yaml ${{ env.RELEASE_VERSION }} ./../../OLM2/rabbitmq-single-active-consumer-operator-openshift
        
      # Create the PR to OperatorHUB
      - name: CreateOperatorHubPR
        env:
          TOKEN: ${{ secrets.OPERATORHUB_TOKEN }}
        run: |
          git clone https://github.com/rabbitmq/community-operators
          cd community-operators/operators/rabbitmq-single-active-consumer-operator
          git branch rabbitmq-single-active-consumer-${{ env.RELEASE_VERSION }}
          git checkout rabbitmq-single-active-consumer-${{ env.RELEASE_VERSION }}
          cp -fR /home/runner/work/single-active-consumer-operator/single-active-consumer-operator/OLM-Package-Repo/OLM2/rabbitmq-single-active-consumer-operator/${{ env.RELEASE_VERSION }} .
          git add .
          git commit -s -m "RabbitMQ single active consumer operator new release"
          git push https://DanielePalaia:"$TOKEN"@github.com/rabbitmq/community-operators

      # Create the PR to redhat openshift ecosystem
      - name: CreateOpenshiftEcosystemPR
        env:
          TOKEN: ${{ secrets.OPERATORHUB_TOKEN }}
        run: |
          git clone https://github.com/rabbitmq/community-operators-prod
          cd community-operators-prod/operators/rabbitmq-single-active-consumer-operator
          git branch rabbitmq-single-active-consumer-${{ env.RELEASE_VERSION }}
          git checkout rabbitmq-single-active-consumer-${{ env.RELEASE_VERSION }}
          cp -fR /home/runner/work/single-active-consumer-operator/single-active-consumer-operator/OLM-Package-Repo/OLM2/rabbitmq-single-active-consumer-operator-openshift/${{ env.RELEASE_VERSION }} .
          git add .
          git commit -s -m "RabbitMQ single active consumer new release"
          git push https://DanielePalaia:"$TOKEN"@github.com/rabbitmq/community-operators-prod
